name: Python package

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
        fail-fast: false
        matrix:
          os: [ubuntu-latest]
          python-version: [ "3.9", "3.10", "3.11", "3.12" ]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest build
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Build wheels
      run: python -m build --wheel --outdir build
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-${{ matrix.python-version }}
        path: build/*.whl

  build-sdist:
    name: Build sdist on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
        fail-fast: false
        matrix:
          os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Build sdist
      run: python -m build --sdist --outdir build
    - uses: actions/upload-artifact@v4
      with:
        name: sdist
        path: ./sbuild/*.tar.gz

