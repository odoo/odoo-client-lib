name: Python package

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
        fail-fast: false
        matrix:
          os: [ubuntu-latest]
          python-version: [ "3.11" ]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest build
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Build wheels
      run: python -m build --wheel --outdir build
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-${{ matrix.python-version }}
        path: build/*.whl

  build-sdist:
    name: Build sdist on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
        fail-fast: false
        matrix:
          os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Build sdist
      run: python -m build --sdist --outdir build
    - uses: actions/upload-artifact@v4
      with:
        name: sdist
        path: ./sbuild/*.tar.gz

  publish-to-pypi:
    name: Publish Python üêç distribution üì¶ to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs: [ build, build-sdist ]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/odoo-client-lib
    # environment:
    #   name: testpypi
    #   url: https://test.pypi.org/p/odoo-client-lib
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        path: dist/
    - name: Display structure of downloaded files
      run: ls -R dist/
    - name: Move files from subdirectories
      run: |
        for subdirectory in dist/*/; do
          dir_name=$(basename "$subdirectory")
          mv "$subdirectory"* dist/
          rm -r "$subdirectory"
          echo "Moved files from '$dir_name' to 'dist/'"
        done

    - name: Publish distribution üì¶ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
    #   with:
    #     repository-url: https://test.pypi.org/legacy/
